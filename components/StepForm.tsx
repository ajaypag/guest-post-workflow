'use client';

import { useState } from 'react';
import { WorkflowStep } from '@/types/workflow';
import { Save, ExternalLink } from 'lucide-react';

interface StepFormProps {
  step: WorkflowStep;
  stepIndex: number;
  onSave: (inputs: Record<string, any>, outputs: Record<string, any>) => void;
}

const stepForms: Record<string, React.FC<{ step: WorkflowStep; onChange: (data: any) => void }>> = {
  'domain-selection': ({ step, onChange }) => (
    <div className="space-y-4">
      <div>
        <label className="block text-sm font-medium mb-1">Selected Domain</label>
        <input
          type="text"
          value={step.outputs.domain || ''}
          onChange={(e) => onChange({ ...step.outputs, domain: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="Enter the domain you selected"
        />
      </div>
      <div>
        <label className="block text-sm font-medium mb-1">Notes</label>
        <textarea
          value={step.outputs.notes || ''}
          onChange={(e) => onChange({ ...step.outputs, notes: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="Any notes about this domain"
        />
      </div>
    </div>
  ),

  'keyword-research': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 2a: Find Topically Relevant Keywords</h3>
        <p className="text-sm mb-2">
          Take your client URL/target URL and paste it into this GPT to get a list of keywords:
        </p>
        <a href="https://chatgpt.com/g/g-685ea890d99c8191bd1550784c329f03-find-topically-relevant-keywords-your-client-page?model=o3" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          Find Topically Relevant Keywords GPT <ExternalLink className="w-3 h-3 ml-1" />
        </a>
      </div>
      
      <div>
        <label className="block text-sm font-medium mb-1">Keywords from GPT (Step 2a Output)</label>
        <textarea
          value={step.outputs.keywords || ''}
          onChange={(e) => onChange({ ...step.outputs, keywords: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="Paste the list of keywords generated by ChatGPT"
        />
      </div>

      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 2b: Validate Keywords in Ahrefs</h3>
        <p className="text-sm mb-2">
          Take the keyword list from Step 2a and go to this Ahrefs URL:
        </p>
        <a href="https://app.ahrefs.com/v2-site-explorer/organic-keywords?brandedMode=all&chartGranularity=daily&chartInterval=year5&compareDate=dontCompare&country=us&currentDate=today&dataMode=text&hiddenColumns=&intentsAttrs=&keywordRules=%5B%5B%22contains%22%2C%22all%22%5D%2C%22compliance%2C%20regulatory%2C%20grc%2C%20risk%20management%2C%20risk%2C%20certification%2C%20security%22%2C%22any%22%5D&limit=100&localMode=all&mainOnly=0&mode=subdomains&multipleUrlsOnly=0&offset=0&performanceChartTopPosition=top11_20%7C%7Ctop21_50%7C%7Ctop3%7C%7Ctop4_10%7C%7Ctop51&positionChanges=&serpFeatures=&sort=OrganicTrafficInitial&sortDirection=desc&target=https%3A%2F%2Fm2sys.com%2F&urlRules=&volume_type=average" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium break-all">
          Ahrefs Site Explorer - Organic Keywords <ExternalLink className="w-3 h-3 ml-1 flex-shrink-0" />
        </a>
        <p className="text-sm mt-3 mb-2 font-semibold">Then:</p>
        <ol className="text-sm space-y-1 ml-4">
          <li>1. <strong>Replace keywords</strong> in the URL filter with keywords from ChatGPT output</li>
          <li>2. <strong>Change the domain</strong> in search bar to the site from Step 1 (where you want the guest post)</li>
          <li>3. <strong>Export to CSV</strong> if the site has relevant results</li>
          <li>4. <strong>If no results</strong> → this site is not viable</li>
        </ol>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Ahrefs CSV Export Status</label>
        <select
          value={step.outputs.csvExported || ''}
          onChange={(e) => onChange({ ...step.outputs, csvExported: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="exported">CSV Exported - Site has relevant results</option>
          <option value="not-viable">No results - Site not viable</option>
        </select>
      </div>

      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 2c: Get Client URL Summaries</h3>
        <p className="text-sm mb-2">
          Input the client URL(s) you want to write a guest post for:
        </p>
        <a href="https://chatgpt.com/g/g-685eb391880c8191afc2808e42086ade-summarize-the-client-s-articles-or-urls?model=o3" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          Summarize Client URLs GPT <ExternalLink className="w-3 h-3 ml-1" />
        </a>
        <p className="text-sm mt-2 italic">
          Tip: You can add multiple URLs if unsure which would be most relevant
        </p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Client URL(s) Used</label>
        <textarea
          value={step.outputs.clientUrls || ''}
          onChange={(e) => onChange({ ...step.outputs, clientUrls: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-20"
          placeholder="List the client URLs you submitted to the GPT"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">URL Summaries Output (Step 2c)</label>
        <textarea
          value={step.outputs.urlSummaries || ''}
          onChange={(e) => onChange({ ...step.outputs, urlSummaries: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="Paste the output with target URLs and summaries"
        />
      </div>
    </div>
  ),

  'topic-generation': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 2d: Generate Guest Post Topics</h3>
        <p className="text-sm mb-2">
          This step combines outputs from the previous three steps. Create a prompt like this:
        </p>
        <div className="bg-white p-3 rounded border border-blue-200 text-sm font-mono">
          <p>Guest post site: [URL from Step 1]</p>
          <p className="mt-1">List of your target urls + summary</p>
          <p className="mt-1">[Attach CSV file from Step 2b]</p>
        </div>
        <p className="text-sm mt-2 mb-2">
          Submit to this GPT:
        </p>
        <a href="https://chatgpt.com/g/g-685eb5acbec48191b817e13ecae859cf-guest-post-topic-machine-for-any-client?model=o3" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          Guest Post Topic Machine <ExternalLink className="w-3 h-3 ml-1" />
        </a>
        <p className="text-sm mt-2 italic">
          The GPT will use your keyword CSV to understand site topical authority and find overlap with client URLs
        </p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Your Prompt to GPT</label>
        <textarea
          value={step.outputs.topicPrompt || ''}
          onChange={(e) => onChange({ ...step.outputs, topicPrompt: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="Paste the prompt you submitted to the Topic Machine GPT"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Suggested Topics Output</label>
        <textarea
          value={step.outputs.suggestedTopics || ''}
          onChange={(e) => onChange({ ...step.outputs, suggestedTopics: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="Paste all topics suggested by GPT"
        />
      </div>

      <div className="bg-yellow-50 p-3 rounded-md">
        <p className="text-sm font-semibold">Step 2e: Record What You Find</p>
        <p className="text-sm">Log keyword intent, quality judgment, and any red flags</p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Keyword Analysis Notes (Step 2e)</label>
        <textarea
          value={step.outputs.keywordAnalysis || ''}
          onChange={(e) => onChange({ ...step.outputs, keywordAnalysis: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-20"
          placeholder="Intent, quality, red flags, etc."
        />
      </div>

      <div className="bg-yellow-50 p-3 rounded-md">
        <p className="text-sm font-semibold">Step 2f: Primary Keyword from GPT</p>
        <p className="text-sm">Record the primary keyword GPT suggests (this aligns with guest site + client page)</p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Primary Keyword (Step 2f)</label>
        <input
          type="text"
          value={step.outputs.primaryKeyword || ''}
          onChange={(e) => onChange({ ...step.outputs, primaryKeyword: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="The main keyword GPT suggested"
        />
      </div>

      <div className="bg-yellow-50 p-3 rounded-md">
        <p className="text-sm font-semibold">Step 2g: Keyword Variations</p>
        <p className="text-sm">Save the full list for reference (don't update sheet yet - wait until Step 2h validation)</p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Keyword Variations (Step 2g)</label>
        <textarea
          value={step.outputs.keywordVariations || ''}
          onChange={(e) => onChange({ ...step.outputs, keywordVariations: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="Full list of keyword variations from GPT"
        />
      </div>

      <div className="bg-yellow-50 p-3 rounded-md">
        <p className="text-sm font-semibold">Step 2h: Validate in Ahrefs</p>
        <p className="text-sm">
          Use Ahrefs Keyword Explorer to check search volume and difficulty. 
          If no volume, re-prompt GPT or generate alternatives manually.
        </p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Final Validated Keyword (Step 2h)</label>
        <input
          type="text"
          value={step.outputs.finalKeyword || ''}
          onChange={(e) => onChange({ ...step.outputs, finalKeyword: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="Final keyword after Ahrefs validation"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Keyword Volume</label>
        <input
          type="text"
          value={step.outputs.keywordVolume || ''}
          onChange={(e) => onChange({ ...step.outputs, keywordVolume: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="Monthly search volume"
        />
      </div>

      <div className="bg-yellow-50 p-3 rounded-md">
        <p className="text-sm font-semibold">Step 2i: Return to GPT with Final Keyword</p>
        <p className="text-sm">GPT will suggest a guest post title/angle</p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Guest Post Title (Step 2i)</label>
        <input
          type="text"
          value={step.outputs.postTitle || ''}
          onChange={(e) => onChange({ ...step.outputs, postTitle: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="Working title suggested by GPT"
        />
      </div>

      <div className="bg-yellow-50 p-3 rounded-md">
        <p className="text-sm font-semibold">Step 2j: Get Deep Research Prompt</p>
        <p className="text-sm">When GPT asks if you want a deep research outline, respond "Yes"</p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Deep Research Prompt (Step 2j)</label>
        <textarea
          value={step.outputs.outlinePrompt || ''}
          onChange={(e) => onChange({ ...step.outputs, outlinePrompt: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="Copy the full prompt GPT provides for deep research"
        />
      </div>
    </div>
  ),

  'deep-research': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 3: Run Deep Research in GPT-o3</h3>
        <p className="text-sm font-semibold mb-2">Follow these steps exactly:</p>
        <ol className="text-sm space-y-2 ml-4">
          <li className="flex">
            <span className="font-semibold mr-2">1.</span>
            <span>Open a new ChatGPT window</span>
          </li>
          <li className="flex">
            <span className="font-semibold mr-2">2.</span>
            <span>Switch to GPT-o3 model</span>
          </li>
          <li className="flex">
            <span className="font-semibold mr-2">3.</span>
            <span>Click the "Tools" button and activate <strong>Deep Research</strong></span>
          </li>
          <li className="flex">
            <span className="font-semibold mr-2">4.</span>
            <span>Paste the prompt from Step 2j and hit Enter</span>
          </li>
          <li className="flex">
            <span className="font-semibold mr-2">5.</span>
            <span>Answer any follow-up questions GPT asks</span>
          </li>
          <li className="flex">
            <span className="font-semibold mr-2">6.</span>
            <span>Let GPT complete the research and generate detailed outline</span>
          </li>
        </ol>
      </div>

      <div className="bg-yellow-50 p-3 rounded-md">
        <p className="text-sm font-semibold">After Research Completes:</p>
        <p className="text-sm">Click the share button and get the share link</p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Research Outline Share Link</label>
        <input
          type="url"
          value={step.outputs.outlineShareLink || ''}
          onChange={(e) => onChange({ ...step.outputs, outlineShareLink: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="https://chatgpt.com/share/..."
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Research Completion Status</label>
        <select
          value={step.outputs.researchStatus || ''}
          onChange={(e) => onChange({ ...step.outputs, researchStatus: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="in-progress">Research in progress</option>
          <option value="completed">Research completed</option>
          <option value="issues">Had issues - needed retry</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Research Notes</label>
        <textarea
          value={step.outputs.researchNotes || ''}
          onChange={(e) => onChange({ ...step.outputs, researchNotes: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="Any additional notes, issues encountered, or key findings from the research"
        />
      </div>
    </div>
  ),

  'article-draft': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 4: Draft the Article (o3 Advanced Reasoning)</h3>
        <p className="text-sm mb-2">Open a new chat in the OutreachLabs Guest Posts project:</p>
        <a href="https://chatgpt.com/g/g-p-685ece4776fc8191963c943f9aed9d36-outreachlabs-guest-posts/project" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          OutreachLabs Guest Posts Project <ExternalLink className="w-3 h-3 ml-1" />
        </a>
        <p className="text-sm mt-2 italic">Note: Must be logged into info@onlyoutreach.com</p>
        <p className="text-sm mt-2 font-semibold">Switch the model to o3 Advanced Reasoning</p>
      </div>

      <div className="bg-green-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">Prompt #1: Planning Phase</h4>
        <p className="text-sm mb-2">Copy and paste this EXACTLY (then add your research outline):</p>
        <div className="bg-white p-3 rounded border border-green-200 text-xs font-mono overflow-x-auto">
          <p>Okay, I'm about to give you a lot of information. Here is a data dump of a deep research we did that's going to lead to an article that you will write for me. I don't want you to start writing. I want you to first just take everything in, analyze it, and start preparing.After that, you're going to start thinking about the outline and flushing it out. I'm not necessarily writing yet, but taking the outline and flushing it out - you're deciding what goes where, you're picking a 3 citations only  and planning where they go. Let's just say total initial planning so that the article can flow through. Determine a word count as well. An acceptable range is 1500-2500.</p>
          <p className="mt-2">((((Paste deep research outline here))))</p>
        </div>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Planning Complete?</label>
        <select
          value={step.outputs.planningStatus || ''}
          onChange={(e) => onChange({ ...step.outputs, planningStatus: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="completed">Planning phase completed</option>
          <option value="in-progress">Still in planning</option>
        </select>
      </div>

      <div className="bg-green-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">Prompt #2: Title + Introduction</h4>
        <p className="text-sm mb-2">Reply with this EXACT text:</p>
        <div className="bg-white p-3 rounded border border-green-200 text-xs font-mono overflow-x-auto">
          <p>Yes, remember we're going to be creating this article section by section. And the format should be primarily narrative, which means its piece is built on flowing prose—full sentences and connected paragraphs that guide the reader smoothly from one idea to the next. They should be short, punchy paragraphs—rarely more than 2-to-3 lines each—so the eye never hits an intimidating wall of text. Frequent line breaks to create natural breathing room and improve scannability.Lists can appear, but only sparingly and only when they truly clarify complex details or highlight a quick sequence the reader might otherwise struggle to absorb. The backbone remains storytelling: each section sets context, explains, and transitions naturally, so the article reads more like a well-structured conversation than a slide deck of bullet points. Start with the title and introduction. Be sure to consult the project documents on Writing Guidelines and Semantic SEO before each section to remind yourself of the best practices that we want to follow. Avoid using Em-dashes. the section you create must follow that of the original outline provided. Remember to keep total word count of article in mind and how you decided to divy up the words per section so you can allocate appropriate word count for this section.</p>
        </div>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Google Doc URL</label>
        <input
          type="url"
          value={step.outputs.googleDocUrl || ''}
          onChange={(e) => onChange({ ...step.outputs, googleDocUrl: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="https://docs.google.com/document/..."
        />
      </div>

      <div className="bg-green-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">Looping Prompt: For Every Subsequent Section</h4>
        <p className="text-sm mb-2">Reply with this UNCHANGED each time:</p>
        <div className="bg-white p-3 rounded border border-green-200 text-xs font-mono overflow-x-auto">
          <p>Proceed to the next section. Remember, the format should be primarily narrative, which means its piece is built on flowing prose—full sentences and connected paragraphs that guide the reader smoothly from one idea to the next. They should be short, punchy paragraphs—rarely more than 2-to-3 lines each—so the eye never hits an intimidating wall of text. Frequent line breaks to create natural breathing room and improve scannability.Lists can appear, but only sparingly and only when they truly clarify complex details or highlight a quick sequence the reader might otherwise struggle to absorb. The backbone remains storytelling: each section sets context, explains, and transitions naturally, so the article reads more like a well-structured conversation than a slide deck of bullet points. Be sure to consult the project documents on Writing Guidelines and Semantic SEO before each section to remind yourself of the best practices that we want to follow. Also be sure to reference my original prompt that contains the article information that should feed your context. I've already done the research and given it to you there - so that's what you need to reference each time. Avoid using Em-dashes. If it's the section that is the "meat" of the article, you must further break your output down into subsections and only output the first subsection so as not to over simplify each component. Note: defining what a subsection means is important. We're not doing sub-subsections, so if the section of the article is already apparently a subsection, then that entire section should be included in your output even if there are apparently sub-subsections within. Note 2: the section you create must follow that of the original outline provided. Remember to keep total word count of article in mind and how you decided to divy up the words per section so you can allocate appropriate word count for this section.</p>
        </div>
        <p className="text-sm mt-2 font-semibold">Repeat until o3 signals the article is complete</p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Word Count</label>
        <input
          type="number"
          value={step.outputs.wordCount || ''}
          onChange={(e) => onChange({ ...step.outputs, wordCount: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="Final word count"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Draft Status</label>
        <select
          value={step.outputs.draftStatus || ''}
          onChange={(e) => onChange({ ...step.outputs, draftStatus: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="in-progress">Still drafting sections</option>
          <option value="completed">All sections complete</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Draft Notes</label>
        <textarea
          value={step.outputs.draftNotes || ''}
          onChange={(e) => onChange({ ...step.outputs, draftNotes: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="Any notes about the drafting process"
        />
      </div>
    </div>
  ),

  'content-audit': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 5: Audit & SEO-Tighten the Draft</h3>
        <p className="text-sm mb-2">
          <strong>Create a NEW CHAT</strong> in the same workspace:
        </p>
        <a href="https://chatgpt.com/g/g-p-685ece4776fc8191963c943f9aed9d36-outreachlabs-guest-posts/project" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          OutreachLabs Guest Posts Project <ExternalLink className="w-3 h-3 ml-1" />
        </a>
        <p className="text-sm mt-2 font-semibold">Switch to o3 Advanced Reasoning</p>
      </div>

      <div className="bg-purple-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">Audit Prompt #1: First Section</h4>
        <p className="text-sm mb-2">Copy and paste EXACTLY:</p>
        <div className="bg-white p-3 rounded border border-purple-200 text-xs font-mono overflow-x-auto">
          <p>This is an article that you wrote for me:</p>
          <p className="mt-1">(paste the full article here)</p>
          <p className="mt-2">If you look at your knowledge base, you'll see that I've added some instructions for semantic SEO in writing. I want you to be a content editor, and I want you to review the article section by section to see if it's meeting the best practices that we discuss. For full reference, this was the original deep research data and outline that might be useful as you edit.</p>
          <p className="mt-1">(paste the full deep research outline here)</p>
          <p className="mt-2">Now I realize this is a lot, so i want your first output to only be an audit of the first section. the format i want is to show the strengths, weaknesses, and the updated section that has your full fixes. start with the first section if cases where a section has many subsections, output just the subsection.</p>
        </div>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Google Doc Tab 2 Created?</label>
        <select
          value={step.outputs.tab2Created || ''}
          onChange={(e) => onChange({ ...step.outputs, tab2Created: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">Yes - Tab 2 created for audit results</option>
          <option value="no">Not yet</option>
        </select>
      </div>

      <div className="bg-purple-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">Looping Audit Prompt #2: Subsequent Sections</h4>
        <p className="text-sm mb-2">Use this EXACT text for each subsequent section:</p>
        <div className="bg-white p-3 rounded border border-purple-200 text-xs font-mono overflow-x-auto">
          <p>Okay, now I want you to proceed your audit with the next section. As a reminder, the format i want is to show the strengths, weaknesses, and the updated section that has your full fixes. start with the first section if cases where a section has many subsections, output just the subsection. In my paste, the formatting for headers did not translate to add those back in logically. While auditing, keep in mind we are creating a "primarily narrative" article so bull points can appear but only sporadically. Note, we will rarely include citations within the article. Only a max are 3 in total are allowed. you can reference the citation without a link though. keep in mind variability too. if this is your 3rd+ section that your editing, maybe you are repeating your editing pattern too much. for example, if you used bullets in your last output, maybe don't in this output</p>
        </div>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Audit Progress</label>
        <select
          value={step.outputs.auditProgress || ''}
          onChange={(e) => onChange({ ...step.outputs, auditProgress: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select progress...</option>
          <option value="25">25% - First few sections</option>
          <option value="50">50% - Halfway through</option>
          <option value="75">75% - Almost done</option>
          <option value="100">100% - All sections audited</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">SEO Score</label>
        <input
          type="number"
          min="0"
          max="100"
          value={step.outputs.seoScore || ''}
          onChange={(e) => onChange({ ...step.outputs, seoScore: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="Post-audit SEO score"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Audit Notes</label>
        <textarea
          value={step.outputs.auditNotes || ''}
          onChange={(e) => onChange({ ...step.outputs, auditNotes: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="Key issues found, major changes made"
        />
      </div>
    </div>
  ),

  'final-polish': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 6: Polish & Finalize the Draft</h3>
        <p className="text-sm mb-2">
          Open a <strong>FRESH CHAT</strong> in the same workspace:
        </p>
        <a href="https://chatgpt.com/g/g-p-685ece4776fc8191963c943f9aed9d36-outreachlabs-guest-posts/project" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          OutreachLabs Guest Posts Project <ExternalLink className="w-3 h-3 ml-1" />
        </a>
        <p className="text-sm mt-2 font-semibold">Switch to o3 Advanced Reasoning</p>
      </div>

      <div className="bg-orange-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">Kick-off Prompt: First Section Edit</h4>
        <p className="text-sm mb-2">Paste this UNCHANGED:</p>
        <div className="bg-white p-3 rounded border border-orange-200 text-xs font-mono overflow-x-auto">
          <p>Okay, here's my article.</p>
          <p className="mt-1">((Paste article generated from step 14))</p>
          <p className="mt-2">Review one of my project files for my brand guide and the Semantic SEO writing tips. I want you to review my article section by section, starting with the first section. Gauge how well it follows the brand guide and semantic seo tips and give it a strengths and weaknesses and update the section with some updates.</p>
        </div>
      </div>

      <div className="bg-red-50 p-4 rounded-md border-2 border-red-300">
        <h4 className="font-semibold mb-2 text-red-800">🔄 CRITICAL: Two-Prompt Loop Pattern</h4>
        <p className="text-sm mb-2 font-semibold text-red-700">
          You MUST alternate between these two prompts for EVERY section:
        </p>
        <div className="bg-white p-3 rounded border border-red-200 mb-3">
          <p className="text-sm font-semibold mb-2">Loop Order:</p>
          <ol className="text-sm space-y-1 ml-4">
            <li>1. <strong>Proceed Prompt</strong> → Get section edit</li>
            <li>2. <strong>Cleanup Prompt</strong> → Refine the edit</li>
            <li>3. Copy cleaned section to Tab 3</li>
            <li>4. Repeat steps 1-3 for next section</li>
          </ol>
        </div>
        <p className="text-sm font-semibold text-red-700">
          ⚠️ Never paste the "Strengths | Weaknesses | Updated" version. Always run Cleanup first!
        </p>
      </div>

      <div className="bg-green-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">🟢 STEP 1: Proceed Prompt (Get Next Section)</h4>
        <p className="text-sm mb-2">Use this UNCHANGED for each section:</p>
        <div className="bg-white p-3 rounded border border-green-200 text-xs font-mono overflow-x-auto">
          <p>Okay that is good. Now, proceed to the next section. Re-review my project files for my brand guide and the Semantic SEO writing tips. Gauge how well it follows the brand guide and semantic seo tips and give it a strengths and weaknesses and update the section with some updates. Be sure to reference the conclusions you made during your thinking process when writing the updating article. Don't use em-dashes</p>
        </div>
        <p className="text-sm mt-2 italic">→ This gives you: Strengths | Weaknesses | Updated Section</p>
      </div>

      <div className="bg-blue-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">🔵 STEP 2: Cleanup Prompt (Refine Section)</h4>
        <p className="text-sm mb-2">Immediately reply with this after EVERY section edit:</p>
        <div className="bg-white p-3 rounded border border-blue-200 text-xs font-mono overflow-x-auto">
          <p>Before you proceed to the next section, review your previous output. Compare it to the brand kit and the words to not use document. Based on that, make any potential updates</p>
        </div>
        <p className="text-sm mt-2 italic">→ This gives you: Cleaned Section (COPY THIS TO TAB 3)</p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Google Doc Tab 3 "Final Draft" Created?</label>
        <select
          value={step.outputs.tab3Created || ''}
          onChange={(e) => onChange({ ...step.outputs, tab3Created: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">Yes - Tab 3 created for final draft</option>
          <option value="no">Not yet</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Polish Progress</label>
        <select
          value={step.outputs.polishProgress || ''}
          onChange={(e) => onChange({ ...step.outputs, polishProgress: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select progress...</option>
          <option value="25">25% - First few sections polished</option>
          <option value="50">50% - Halfway through</option>
          <option value="75">75% - Almost done</option>
          <option value="100">100% - All sections polished</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Brand Alignment Notes</label>
        <textarea
          value={step.outputs.brandNotes || ''}
          onChange={(e) => onChange({ ...step.outputs, brandNotes: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="Key brand adjustments made, voice improvements"
        />
      </div>
    </div>
  ),

  'formatting-qa': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 7: Manual Formatting & Single-Citation QA</h3>
        <p className="text-sm mb-2">
          Give the "Final Draft" Google Doc one last sweep for formatting and ensure exactly one citation near the top.
        </p>
      </div>

      <div className="bg-gray-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">Formatting Checklist</h4>
        <div className="space-y-2 text-sm">
          <label className="flex items-center">
            <input 
              type="checkbox" 
              checked={step.outputs.headerHierarchy || false}
              onChange={(e) => onChange({ ...step.outputs, headerHierarchy: e.target.checked })}
              className="mr-2"
            />
            Header hierarchy correct (H2s and H3s use Google Docs heading styles, not plain bold)
          </label>
          <label className="flex items-center">
            <input 
              type="checkbox"
              checked={step.outputs.lineBreaks || false}
              onChange={(e) => onChange({ ...step.outputs, lineBreaks: e.target.checked })}
              className="mr-2"
            />
            No orphan line breaks (exactly one blank line between paragraphs)
          </label>
          <label className="flex items-center">
            <input 
              type="checkbox"
              checked={step.outputs.allHeaders || false}
              onChange={(e) => onChange({ ...step.outputs, allHeaders: e.target.checked })}
              className="mr-2"
            />
            All expected headers exist (Intro, body sections, FAQ intro, Conclusion)
          </label>
          <label className="flex items-center">
            <input 
              type="checkbox"
              checked={step.outputs.listStyling || false}
              onChange={(e) => onChange({ ...step.outputs, listStyling: e.target.checked })}
              className="mr-2"
            />
            Consistent list styling (bullets/numbers don't change mid-section)
          </label>
          <label className="flex items-center">
            <input 
              type="checkbox"
              checked={step.outputs.randomBolding || false}
              onChange={(e) => onChange({ ...step.outputs, randomBolding: e.target.checked })}
              className="mr-2"
            />
            Random bolding removed (only purposeful bold remains)
          </label>
          <label className="flex items-center">
            <input 
              type="checkbox"
              checked={step.outputs.faqFormatting || false}
              onChange={(e) => onChange({ ...step.outputs, faqFormatting: e.target.checked })}
              className="mr-2"
            />
            FAQ formatting clean (questions bold sentence-case, answers plain text)
          </label>
        </div>
      </div>

      <div className="bg-red-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">Citation Requirements</h4>
        <p className="text-sm mb-2">
          <strong>Single citation near the top:</strong> One "[citation]" or "[1]" marker in intro/first section only
        </p>
        <p className="text-sm font-semibold text-red-700">
          REMOVE source UTM parameter of chatgpt from any URLs
        </p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Citation Status</label>
        <select
          value={step.outputs.citationStatus || ''}
          onChange={(e) => onChange({ ...step.outputs, citationStatus: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="added">Single citation added near top</option>
          <option value="removed-extras">Extra citations removed</option>
          <option value="utm-cleaned">UTM parameters cleaned</option>
          <option value="completed">All citation work complete</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">QA Issues Found</label>
        <textarea
          value={step.outputs.qaIssues || ''}
          onChange={(e) => onChange({ ...step.outputs, qaIssues: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="List any formatting issues found and fixed"
        />
      </div>
    </div>
  ),

  'internal-links': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 8: Internal Links to Guest Post Site</h3>
        <p className="text-sm mb-2">
          Make sure model o3 is selected. Paste in the article and the site where you're guest posting.
        </p>
        <a href="https://chatgpt.com/g/g-685c386ba4848191ac01d0bcea6e8db7-guest-post-internal-links" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          Guest Post Internal Links GPT <ExternalLink className="w-3 h-3 ml-1" />
        </a>
        <p className="text-sm mt-2 italic">
          The GPT will tell you what internal links to add to the article.
        </p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Article Submitted?</label>
        <select
          value={step.outputs.articleSubmitted || ''}
          onChange={(e) => onChange({ ...step.outputs, articleSubmitted: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">Article and site submitted to GPT</option>
          <option value="no">Not yet</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Internal Links Suggested</label>
        <textarea
          value={step.outputs.internalLinksSuggested || ''}
          onChange={(e) => onChange({ ...step.outputs, internalLinksSuggested: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="Paste the internal links suggested by the GPT"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Links Added to Article?</label>
        <select
          value={step.outputs.linksAdded || ''}
          onChange={(e) => onChange({ ...step.outputs, linksAdded: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">Internal links added to Google Doc</option>
          <option value="partial">Some links added</option>
          <option value="no">Not yet added</option>
        </select>
      </div>
    </div>
  ),

  'external-links': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 9: Links to Other Guest Posts</h3>
        <p className="text-sm mb-2">
          Go to Airtable and find previous guest posts published for Vanta. Paste them into the GPT along with the article.
        </p>
        <a href="https://chatgpt.com/g/g-685c3b6a40548191b3cb4a99e405f0a4-links-to-other-guest-posts-that-we-ve-done" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          Links to Other Guest Posts GPT <ExternalLink className="w-3 h-3 ml-1" />
        </a>
        <p className="text-sm mt-2 italic">
          The GPT will tell you where to potentially include a link to one of the guest posts.
        </p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Previous Guest Posts Found</label>
        <textarea
          value={step.outputs.previousPosts || ''}
          onChange={(e) => onChange({ ...step.outputs, previousPosts: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="List the previous Vanta guest posts from Airtable"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">External Link Suggestions</label>
        <textarea
          value={step.outputs.externalLinkSuggestions || ''}
          onChange={(e) => onChange({ ...step.outputs, externalLinkSuggestions: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="Paste GPT suggestions for linking to other guest posts"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">External Links Added?</label>
        <select
          value={step.outputs.externalLinksAdded || ''}
          onChange={(e) => onChange({ ...step.outputs, externalLinksAdded: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">External links added to article</option>
          <option value="no">No suitable links found</option>
          <option value="partial">Some links added</option>
        </select>
      </div>
    </div>
  ),

  'client-mention': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 10: Client Mention for AI Overviews</h3>
        <p className="text-sm mb-2">
          Find a place to mention client close to a keyword that's relevant, with no backlink.
        </p>
        <a href="https://chatgpt.com/g/g-685c405ec2b88191862102965a706619-vanta-inclusion-in-gp" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          Vanta Inclusion in GP GPT <ExternalLink className="w-3 h-3 ml-1" />
        </a>
        <p className="text-sm mt-2 italic">
          This GPT will tell you how to mention client in a way that's beneficial for AI overviews.
        </p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Article Submitted to GPT?</label>
        <select
          value={step.outputs.articleSubmitted || ''}
          onChange={(e) => onChange({ ...step.outputs, articleSubmitted: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">Article submitted to GPT</option>
          <option value="no">Not yet</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Client Mention Suggestion</label>
        <textarea
          value={step.outputs.clientMentionSuggestion || ''}
          onChange={(e) => onChange({ ...step.outputs, clientMentionSuggestion: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="Paste GPT's suggestion for how to mention the client"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Client Mention Added?</label>
        <select
          value={step.outputs.clientMentionAdded || ''}
          onChange={(e) => onChange({ ...step.outputs, clientMentionAdded: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">Client mention added to article</option>
          <option value="no">No suitable placement found</option>
          <option value="modified">Modified GPT suggestion before adding</option>
        </select>
      </div>
    </div>
  ),

  'client-link': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 11: Client Link Placement</h3>
        <p className="text-sm mb-2">
          Place a link to the client inside the article. Follow the instructions: paste the article and the URL you want to add.
        </p>
        <a href="https://chatgpt.com/g/g-685c44e260908191973c469465ed7d4b-insert-client-s-link-into-your-guest-post" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          Insert Client's Link GPT <ExternalLink className="w-3 h-3 ml-1" />
        </a>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Client URL to Link</label>
        <input
          type="url"
          value={step.outputs.clientUrl || ''}
          onChange={(e) => onChange({ ...step.outputs, clientUrl: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="https://vanta.com/..."
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Desired Anchor Text</label>
        <input
          type="text"
          value={step.outputs.anchorText || ''}
          onChange={(e) => onChange({ ...step.outputs, anchorText: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="Anchor text for the link"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Initial GPT Suggestion</label>
        <textarea
          value={step.outputs.initialSuggestion || ''}
          onChange={(e) => onChange({ ...step.outputs, initialSuggestion: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="Paste the initial suggestion from GPT"
        />
      </div>

      <div className="bg-yellow-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">Follow-up Prompt #1</h4>
        <p className="text-sm mb-2">Ask this prompt after the initial suggestion:</p>
        <div className="bg-white p-3 rounded border border-yellow-200 text-xs font-mono overflow-x-auto">
          <p>again, a link insert should not feel random or out of left field or feel like theres no reason why its being linked to. a good link is one that instantly looks like it belongs. as in, the article is saying something, and the way the link is introduced is a natural extension of wahts being said. this is deeper than just looking for the word in the article. context is key. if you cannot find existing context, then you need to think about a) what type of leadin would make sense when generating a link to the target url, and b) what lead in can you add to the existing article to make it work.</p>
        </div>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Second GPT Response</label>
        <textarea
          value={step.outputs.secondResponse || ''}
          onChange={(e) => onChange({ ...step.outputs, secondResponse: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="Paste GPT's response to first follow-up"
        />
      </div>

      <div className="bg-yellow-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">Follow-up Prompt #2</h4>
        <p className="text-sm mb-2">Ask this final prompt:</p>
        <div className="bg-white p-3 rounded border border-yellow-200 text-xs font-mono overflow-x-auto">
          <p>what makes more sense to do it is take something from the article that is being linkeded to, reference it in the guest post and then link back to the article as the source using the anchor text. with those constraints, you may actually manage to do something actually useful and natural. note, if the anchor text doesnt match the same intent of the client url page title, its probably not viable. you are also allowed to create a while new paragraph if you aren't finding anything perfectly viable or add a new sentence at the beginning of a section or paragraph. do not settle for average. WHAT YOU MUST ABSOLUTELY NOT DO IS JUST ACT LIKE A "THROW IN SENTENCE IS OKAY". IF YOU ARE GOING TO CREATE A SENTENCE, THEN YOU WILL LIKELY NEED TO MODIFY THE SURROUNDED SENTENCES OR ENTIRE PARAGRAPH TO ACTUALLY JUSTIFY IT. YOU ARE TO THINK LIKE A WRITER. JUST ADDING RANDOM SENTENCES IS NOT WRITING - ITS BEING LAZY. IF YOU ARE ADDING A SENTENCE YOU ARE NOT FUCKING ALLOWED TO NOT EDIT OTHER THINGS WITHIN THE OUTPUT YOU PROVIDE. do not use em-dashes. IN YOUR EDIT, DO NOT DO SOMETHING LAME LIKE AS X EXPLAINS... THAT IS NOT WRITING. ANCHOR TEXT AS SOURCE IS A NATURAL WAY OF WRITING AND DOES NOT REQUIRE ADDITIONAL LEADIN LIKE SAYING AS PER XYZ, ESPECIALLY WHEN ITS A NOT A DATA POINT OR STUDY.</p>
        </div>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Final GPT Suggestion</label>
        <textarea
          value={step.outputs.finalSuggestion || ''}
          onChange={(e) => onChange({ ...step.outputs, finalSuggestion: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="Paste the final, refined suggestion"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Client Link Added?</label>
        <select
          value={step.outputs.clientLinkAdded || ''}
          onChange={(e) => onChange({ ...step.outputs, clientLinkAdded: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">Client link added to article</option>
          <option value="modified">Modified suggestion before adding</option>
          <option value="no">No viable placement found</option>
        </select>
      </div>

      <div className="bg-red-50 p-3 rounded-md">
        <p className="text-sm font-semibold text-red-700">
          Important: Remove any other links in the same sentence/paragraph where you place the client link
        </p>
      </div>
    </div>
  ),

  'images': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 12: Create Images</h3>
        <p className="text-sm mb-2">
          Create images for the blog post. Aim for 3 images. Start by pasting in your guest post content.
        </p>
        <a href="https://chatgpt.com/g/g-685c4280a6508191a939e2d05a8d0648-guest-post-image-creator" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          Guest Post Image Creator GPT <ExternalLink className="w-3 h-3 ml-1" />
        </a>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Guest Post Content Submitted?</label>
        <select
          value={step.outputs.contentSubmitted || ''}
          onChange={(e) => onChange({ ...step.outputs, contentSubmitted: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">Full guest post content submitted</option>
          <option value="no">Not yet</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Image Concepts Suggested</label>
        <textarea
          value={step.outputs.imageConcepts || ''}
          onChange={(e) => onChange({ ...step.outputs, imageConcepts: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="List the image concepts suggested by GPT"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Number of Images Created</label>
        <input
          type="number"
          min="0"
          max="10"
          value={step.outputs.imagesCreated || ''}
          onChange={(e) => onChange({ ...step.outputs, imagesCreated: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="3"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Image Creation Status</label>
        <select
          value={step.outputs.imageStatus || ''}
          onChange={(e) => onChange({ ...step.outputs, imageStatus: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="completed">All images created and approved</option>
          <option value="in-progress">Still generating images</option>
          <option value="revisions">Need revisions</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Image Notes</label>
        <textarea
          value={step.outputs.imageNotes || ''}
          onChange={(e) => onChange({ ...step.outputs, imageNotes: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="Notes about image creation, quality, placement suggestions"
        />
      </div>
    </div>
  ),

  'link-requests': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 13: Internal Link Requests</h3>
        <p className="text-sm mb-2">
          Find 3 relevant articles on their current blog that we could ask them to add an internal link from their page to this new post.
        </p>
        <a href="https://chatgpt.com/g/g-685d7ed61d448191b4e1033a0e0b4201-get-internal-links-to-your-new-guest-post" 
           target="_blank" 
           className="text-blue-600 hover:underline inline-flex items-center font-medium">
          Get Internal Links to Your New Guest Post GPT <ExternalLink className="w-3 h-3 ml-1" />
        </a>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Analysis Submitted?</label>
        <select
          value={step.outputs.analysisSubmitted || ''}
          onChange={(e) => onChange({ ...step.outputs, analysisSubmitted: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">Guest post and target site submitted</option>
          <option value="no">Not yet</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Article 1 for Internal Link</label>
        <input
          type="url"
          value={step.outputs.linkArticle1 || ''}
          onChange={(e) => onChange({ ...step.outputs, linkArticle1: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="URL of first relevant article"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Article 2 for Internal Link</label>
        <input
          type="url"
          value={step.outputs.linkArticle2 || ''}
          onChange={(e) => onChange({ ...step.outputs, linkArticle2: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="URL of second relevant article"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Article 3 for Internal Link</label>
        <input
          type="url"
          value={step.outputs.linkArticle3 || ''}
          onChange={(e) => onChange({ ...step.outputs, linkArticle3: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="URL of third relevant article"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Link Placement Suggestions</label>
        <textarea
          value={step.outputs.linkPlacementSuggestions || ''}
          onChange={(e) => onChange({ ...step.outputs, linkPlacementSuggestions: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-32"
          placeholder="Where and how to request internal links from each article"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Link Request Status</label>
        <select
          value={step.outputs.linkRequestStatus || ''}
          onChange={(e) => onChange({ ...step.outputs, linkRequestStatus: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="ready">Ready to request links</option>
          <option value="requested">Link requests sent</option>
          <option value="approved">Links approved and added</option>
          <option value="no-suitable">No suitable articles found</option>
        </select>
      </div>
    </div>
  ),

  'url-suggestion': ({ step, onChange }) => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-md">
        <h3 className="font-semibold mb-2">Step 14: URL Suggestion</h3>
        <p className="text-sm mb-2">
          Add a suggested URL under the title of the Google Doc.
        </p>
        <p className="text-sm italic">
          If it's a news site, figure out the website hierarchy and which section would be most relevant for this client.
        </p>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Website Type Analysis</label>
        <select
          value={step.outputs.websiteType || ''}
          onChange={(e) => onChange({ ...step.outputs, websiteType: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select website type...</option>
          <option value="news">News site</option>
          <option value="business-blog">Business blog</option>
          <option value="industry-publication">Industry publication</option>
          <option value="tech-blog">Tech blog</option>
          <option value="other">Other</option>
        </select>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Website Hierarchy/Section</label>
        <input
          type="text"
          value={step.outputs.websiteSection || ''}
          onChange={(e) => onChange({ ...step.outputs, websiteSection: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="e.g., /security/, /technology/, /business/"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">Suggested URL</label>
        <input
          type="text"
          value={step.outputs.suggestedUrl || ''}
          onChange={(e) => onChange({ ...step.outputs, suggestedUrl: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
          placeholder="/security/vanta-compliance-automation-guide/"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">URL Reasoning</label>
        <textarea
          value={step.outputs.urlReasoning || ''}
          onChange={(e) => onChange({ ...step.outputs, urlReasoning: e.target.value })}
          className="w-full px-3 py-2 border rounded-md h-24"
          placeholder="Why this URL structure makes sense for this site and topic"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">URL Added to Google Doc?</label>
        <select
          value={step.outputs.urlAddedToDoc || ''}
          onChange={(e) => onChange({ ...step.outputs, urlAddedToDoc: e.target.value })}
          className="w-full px-3 py-2 border rounded-md"
        >
          <option value="">Select status...</option>
          <option value="yes">URL suggestion added under title</option>
          <option value="no">Not yet added</option>
        </select>
      </div>

      <div className="bg-green-50 p-4 rounded-md">
        <h4 className="font-semibold mb-2">🎉 Workflow Complete!</h4>
        <p className="text-sm">
          All 15 steps of the guest post workflow are now complete. Review the final deliverables and prepare for submission.
        </p>
      </div>
    </div>
  )
};

const defaultForm = ({ step, onChange }: { step: WorkflowStep; onChange: (data: any) => void }) => (
  <div className="space-y-4">
    <div>
      <label className="block text-sm font-medium mb-1">Input/Notes</label>
      <textarea
        value={step.inputs.notes || ''}
        onChange={(e) => onChange({ ...step.inputs, notes: e.target.value })}
        className="w-full px-3 py-2 border rounded-md h-24"
        placeholder="Input data or notes for this step"
      />
    </div>
    <div>
      <label className="block text-sm font-medium mb-1">Output/Results</label>
      <textarea
        value={step.outputs.results || ''}
        onChange={(e) => onChange({ ...step.outputs, results: e.target.value })}
        className="w-full px-3 py-2 border rounded-md h-24"
        placeholder="Results or output from this step"
      />
    </div>
  </div>
);

export default function StepForm({ step, stepIndex, onSave }: StepFormProps) {
  const [localOutputs, setLocalOutputs] = useState(step.outputs);
  const [localInputs, setLocalInputs] = useState(step.inputs);

  const handleSave = () => {
    onSave(localInputs, localOutputs);
  };

  const FormComponent = stepForms[step.id] || defaultForm;

  return (
    <div className="bg-white rounded-lg p-6">
      <div className="mb-6">
        <h3 className="text-lg font-semibold">Step {stepIndex + 1}: {step.title}</h3>
        <p className="text-sm text-gray-600 mt-1">{step.description}</p>
      </div>

      <FormComponent 
        step={{ ...step, inputs: localInputs, outputs: localOutputs }}
        onChange={(data) => {
          if (stepForms[step.id]) {
            setLocalOutputs(data);
          } else {
            if (data.notes !== undefined) {
              setLocalInputs(data);
            } else {
              setLocalOutputs(data);
            }
          }
        }}
      />

      <div className="mt-6">
        <button
          onClick={handleSave}
          className="inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors"
        >
          <Save className="w-4 h-4 mr-2" />
          Save & Mark Complete
        </button>
      </div>
    </div>
  );
}